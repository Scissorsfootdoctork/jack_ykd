{"ast":null,"code":"import { useState, useRef, useCallback, useImperativeHandle, useEffect } from 'react';\nimport { o as observerDomResize, d as debounce } from './index-65ee9985.js';\nimport { s as slicedToArray, _ as _extends } from './_babelHelpers-a63acad8.js';\n\nfunction useAutoResize(ref) {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var domRef = useRef(null);\n  var setWH = useCallback(function () {\n    var _ref = domRef.current || {\n      clientWidth: 0,\n      clientHeight: 0\n    },\n        clientWidth = _ref.clientWidth,\n        clientHeight = _ref.clientHeight;\n\n    setState({\n      width: clientWidth,\n      height: clientHeight\n    });\n\n    if (!domRef.current) {\n      console.warn('DataV: Failed to get dom node, component rendering may be abnormal!');\n    } else if (!clientWidth || !clientHeight) {\n      console.warn('DataV: Component width or height is 0px, rendering abnormality may occur!');\n    }\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      setWH: setWH\n    };\n  }, []);\n  useEffect(function () {\n    var debounceSetWHFun = debounce(setWH, 100);\n    debounceSetWHFun();\n    var domObserver = observerDomResize(domRef.current, debounceSetWHFun);\n    window.addEventListener('resize', debounceSetWHFun);\n    return function () {\n      window.removeEventListener('resize', debounceSetWHFun);\n\n      if (!domObserver) {\n        return;\n      }\n\n      domObserver.disconnect();\n      domObserver.takeRecords();\n    };\n  }, []);\n  return _extends({}, state, {\n    domRef: domRef,\n    setWH: setWH\n  });\n}\n\nexport { useAutoResize as u };","map":{"version":3,"sources":["../src/use/autoResize.js"],"names":["state","setState","useState","width","height","domRef","useRef","setWH","clientWidth","clientHeight","console","useImperativeHandle","useEffect","debounceSetWHFun","debounce","domObserver","observerDomResize","window"],"mappings":";;;;AAGe,SAAA,aAAA,CAAA,GAAA,EAA4B;AAAA,MAAA,SAAA,GACfE,QAAAA,CAAS;AAAEC,IAAAA,KAAAA,EAAF,CAAA;AAAYC,IAAAA,MAAAA,EADN;AACN,GAATF,CADe;AAAA,MAAA,UAAA,GAAA,aAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAClCF,KADkC,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MAC3BC,QAD2B,GAAA,UAAA,CAAA,CAAA,CAAA;;AAGzC,MAAMI,MAAAA,GAASC,MAAAA,CAAf,IAAeA,CAAf;AAEA,MAAMC,KAAAA,GAAQ,WAAA,CAAY,YAAM;AAAA,QAAA,IAAA,GACQF,MAAAA,CAAAA,OAAAA,IAAkB;AAAEG,MAAAA,WAAAA,EAAF,CAAA;AAAkBC,MAAAA,YAAAA,EAD5C;AAC0B,KAD1B;AAAA,QACtBD,WADsB,GAAA,IAAA,CAAA,WAAA;AAAA,QACTC,YADS,GAAA,IAAA,CAAA,YAAA;;AAG9BR,IAAAA,QAAAA,CAAS;AAAEE,MAAAA,KAAAA,EAAF,WAAA;AAAsBC,MAAAA,MAAAA,EAA/BH;AAAS,KAATA,CAAAA;;AAEA,QAAI,CAACI,MAAAA,CAAL,OAAA,EAAqB;AACnBK,MAAAA,OAAAA,CAAAA,IAAAA,CAAAA,qEAAAA;AADF,KAAA,MAEO,IAAI,CAAA,WAAA,IAAgB,CAApB,YAAA,EAAmC;AACxCA,MAAAA,OAAAA,CAAAA,IAAAA,CAAAA,2EAAAA;AACD;AATW,GAAA,EAAd,EAAc,CAAd;AAYAC,EAAAA,mBAAAA,CAAAA,GAAAA,EAAyB,YAAA;AAAA,WAAO;AAAEJ,MAAAA,KAAAA,EAAT;AAAO,KAAP;AAAzBI,GAAAA,EAAAA,EAAAA,CAAAA;AAEAC,EAAAA,SAAAA,CAAU,YAAM;AACd,QAAMC,gBAAAA,GAAmBC,QAAAA,CAAAA,KAAAA,EAAzB,GAAyBA,CAAzB;AAEAD,IAAAA,gBAAAA;AAEA,QAAME,WAAAA,GAAcC,iBAAAA,CAAkBX,MAAAA,CAAlBW,OAAAA,EAApB,gBAAoBA,CAApB;AAEAC,IAAAA,MAAAA,CAAAA,gBAAAA,CAAAA,QAAAA,EAAAA,gBAAAA;AAEA,WAAO,YAAM;AACXA,MAAAA,MAAAA,CAAAA,mBAAAA,CAAAA,QAAAA,EAAAA,gBAAAA;;AAEA,UAAI,CAAJ,WAAA,EAAkB;AAChB;AACD;;AAEDF,MAAAA,WAAAA,CAAAA,UAAAA;AACAA,MAAAA,WAAAA,CAAAA,WAAAA;AARF,KAAA;AATFH,GAAAA,EAAAA,EAAAA,CAAAA;AAqBA,SAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAmBP,IAAAA,MAAAA,EAAnB,MAAA;AAA2BE,IAAAA,KAAAA,EAA3B;AAAA,GAAA,CAAA;AACD","sourcesContent":["import { useState, useCallback, useEffect, useRef, useImperativeHandle } from 'react'\nimport { debounce, observerDomResize } from '../util/index'\n\nexport default function useAutoResize(ref) {\n  const [state, setState] = useState({ width: 0, height: 0 })\n\n  const domRef = useRef(null)\n\n  const setWH = useCallback(() => {\n    const { clientWidth, clientHeight } = domRef.current || { clientWidth: 0, clientHeight: 0 }\n\n    setState({ width: clientWidth, height: clientHeight })\n\n    if (!domRef.current) {\n      console.warn('DataV: Failed to get dom node, component rendering may be abnormal!')\n    } else if (!clientWidth || !clientHeight) {\n      console.warn('DataV: Component width or height is 0px, rendering abnormality may occur!')\n    }\n  }, [])\n\n  useImperativeHandle(ref, () => ({ setWH }), [])\n\n  useEffect(() => {\n    const debounceSetWHFun = debounce(setWH, 100)\n\n    debounceSetWHFun()\n\n    const domObserver = observerDomResize(domRef.current, debounceSetWHFun)\n\n    window.addEventListener('resize', debounceSetWHFun)\n\n    return () => {\n      window.removeEventListener('resize', debounceSetWHFun)\n\n      if (!domObserver) {\n        return\n      }\n\n      domObserver.disconnect()\n      domObserver.takeRecords()\n    }\n  }, [])\n\n  return { ...state, domRef, setWH }\n}\n"]},"metadata":{},"sourceType":"module"}