{"ast":null,"code":"import { c as createCommonjsModule, u as unwrapExports } from './style-inject.es-3bd340c8.js';\nvar interopRequireDefault = createCommonjsModule(function (module) {\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      \"default\": obj\n    };\n  }\n\n  module.exports = _interopRequireDefault;\n});\nunwrapExports(interopRequireDefault);\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar arrayLikeToArray = _arrayLikeToArray;\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nvar arrayWithoutHoles = _arrayWithoutHoles;\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nvar iterableToArray = _iterableToArray;\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nvar unsupportedIterableToArray = _unsupportedIterableToArray;\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar nonIterableSpread = _nonIterableSpread;\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nvar toConsumableArray = _toConsumableArray;\n\nvar _typeof_1 = createCommonjsModule(function (module) {\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      module.exports = _typeof = function _typeof(obj) {\n        return typeof obj;\n      };\n    } else {\n      module.exports = _typeof = function _typeof(obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  module.exports = _typeof;\n});\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar arrayWithHoles = _arrayWithHoles;\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nvar iterableToArrayLimit = _iterableToArrayLimit;\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar nonIterableRest = _nonIterableRest;\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nvar slicedToArray = _slicedToArray;\nvar util = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.deepClone = deepClone;\n  exports.eliminateBlur = eliminateBlur;\n  exports.checkPointIsInCircle = checkPointIsInCircle;\n  exports.getTwoPointDistance = getTwoPointDistance;\n  exports.checkPointIsInPolygon = checkPointIsInPolygon;\n  exports.checkPointIsInSector = checkPointIsInSector;\n  exports.checkPointIsNearPolyline = checkPointIsNearPolyline;\n  exports.checkPointIsInRect = checkPointIsInRect;\n  exports.getRotatePointPos = getRotatePointPos;\n  exports.getScalePointPos = getScalePointPos;\n  exports.getTranslatePointPos = getTranslatePointPos;\n  exports.getDistanceBetweenPointAndLine = getDistanceBetweenPointAndLine;\n  exports.getCircleRadianPoint = getCircleRadianPoint;\n  exports.getRegularPolygonPoints = getRegularPolygonPoints;\n  exports[\"default\"] = void 0;\n\n  var _toConsumableArray2 = interopRequireDefault(toConsumableArray);\n\n  var _slicedToArray2 = interopRequireDefault(slicedToArray);\n\n  var _typeof2 = interopRequireDefault(_typeof_1);\n\n  var abs = Math.abs,\n      sqrt = Math.sqrt,\n      sin = Math.sin,\n      cos = Math.cos,\n      max = Math.max,\n      min = Math.min,\n      PI = Math.PI;\n  /**\r\n   * @description Clone an object or array\r\n   * @param {Object|Array} object Cloned object\r\n   * @param {Boolean} recursion   Whether to use recursive cloning\r\n   * @return {Object|Array} Clone object\r\n   */\n\n  function deepClone(object) {\n    var recursion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!object) return object;\n    var parse = JSON.parse,\n        stringify = JSON.stringify;\n    if (!recursion) return parse(stringify(object));\n    var clonedObj = object instanceof Array ? [] : {};\n\n    if (object && (0, _typeof2[\"default\"])(object) === 'object') {\n      for (var key in object) {\n        if (object.hasOwnProperty(key)) {\n          if (object[key] && (0, _typeof2[\"default\"])(object[key]) === 'object') {\n            clonedObj[key] = deepClone(object[key], true);\n          } else {\n            clonedObj[key] = object[key];\n          }\n        }\n      }\n    }\n\n    return clonedObj;\n  }\n  /**\r\n   * @description Eliminate line blur due to 1px line width\r\n   * @param {Array} points Line points\r\n   * @return {Array} Line points after processed\r\n   */\n\n\n  function eliminateBlur(points) {\n    return points.map(function (_ref) {\n      var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n          x = _ref2[0],\n          y = _ref2[1];\n\n      return [parseInt(x) + 0.5, parseInt(y) + 0.5];\n    });\n  }\n  /**\r\n   * @description Check if the point is inside the circle\r\n   * @param {Array} point Postion of point\r\n   * @param {Number} rx   Circle x coordinate\r\n   * @param {Number} ry   Circle y coordinate\r\n   * @param {Number} r    Circle radius\r\n   * @return {Boolean} Result of check\r\n   */\n\n\n  function checkPointIsInCircle(point, rx, ry, r) {\n    return getTwoPointDistance(point, [rx, ry]) <= r;\n  }\n  /**\r\n   * @description Get the distance between two points\r\n   * @param {Array} point1 point1\r\n   * @param {Array} point2 point2\r\n   * @return {Number} Distance between two points\r\n   */\n\n\n  function getTwoPointDistance(_ref3, _ref4) {\n    var _ref5 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n        xa = _ref5[0],\n        ya = _ref5[1];\n\n    var _ref6 = (0, _slicedToArray2[\"default\"])(_ref4, 2),\n        xb = _ref6[0],\n        yb = _ref6[1];\n\n    var minusX = abs(xa - xb);\n    var minusY = abs(ya - yb);\n    return sqrt(minusX * minusX + minusY * minusY);\n  }\n  /**\r\n   * @description Check if the point is inside the polygon\r\n   * @param {Array} point  Postion of point\r\n   * @param {Array} points The points that makes up a polyline\r\n   * @return {Boolean} Result of check\r\n   */\n\n\n  function checkPointIsInPolygon(point, polygon) {\n    var counter = 0;\n\n    var _point = (0, _slicedToArray2[\"default\"])(point, 2),\n        x = _point[0],\n        y = _point[1];\n\n    var pointNum = polygon.length;\n\n    for (var i = 1, p1 = polygon[0]; i <= pointNum; i++) {\n      var p2 = polygon[i % pointNum];\n\n      if (x > min(p1[0], p2[0]) && x <= max(p1[0], p2[0])) {\n        if (y <= max(p1[1], p2[1])) {\n          if (p1[0] !== p2[0]) {\n            var xinters = (x - p1[0]) * (p2[1] - p1[1]) / (p2[0] - p1[0]) + p1[1];\n\n            if (p1[1] === p2[1] || y <= xinters) {\n              counter++;\n            }\n          }\n        }\n      }\n\n      p1 = p2;\n    }\n\n    return counter % 2 === 1;\n  }\n  /**\r\n   * @description Check if the point is inside the sector\r\n   * @param {Array} point       Postion of point\r\n   * @param {Number} rx         Sector x coordinate\r\n   * @param {Number} ry         Sector y coordinate\r\n   * @param {Number} r          Sector radius\r\n   * @param {Number} startAngle Sector start angle\r\n   * @param {Number} endAngle   Sector end angle\r\n   * @param {Boolean} clockWise Whether the sector angle is clockwise\r\n   * @return {Boolean} Result of check\r\n   */\n\n\n  function checkPointIsInSector(point, rx, ry, r, startAngle, endAngle, clockWise) {\n    if (!point) return false;\n    if (getTwoPointDistance(point, [rx, ry]) > r) return false;\n\n    if (!clockWise) {\n      var _deepClone = deepClone([endAngle, startAngle]);\n\n      var _deepClone2 = (0, _slicedToArray2[\"default\"])(_deepClone, 2);\n\n      startAngle = _deepClone2[0];\n      endAngle = _deepClone2[1];\n    }\n\n    var reverseBE = startAngle > endAngle;\n\n    if (reverseBE) {\n      var _ref7 = [endAngle, startAngle];\n      startAngle = _ref7[0];\n      endAngle = _ref7[1];\n    }\n\n    var minus = endAngle - startAngle;\n    if (minus >= PI * 2) return true;\n\n    var _point2 = (0, _slicedToArray2[\"default\"])(point, 2),\n        x = _point2[0],\n        y = _point2[1];\n\n    var _getCircleRadianPoint = getCircleRadianPoint(rx, ry, r, startAngle),\n        _getCircleRadianPoint2 = (0, _slicedToArray2[\"default\"])(_getCircleRadianPoint, 2),\n        bx = _getCircleRadianPoint2[0],\n        by = _getCircleRadianPoint2[1];\n\n    var _getCircleRadianPoint3 = getCircleRadianPoint(rx, ry, r, endAngle),\n        _getCircleRadianPoint4 = (0, _slicedToArray2[\"default\"])(_getCircleRadianPoint3, 2),\n        ex = _getCircleRadianPoint4[0],\n        ey = _getCircleRadianPoint4[1];\n\n    var vPoint = [x - rx, y - ry];\n    var vBArm = [bx - rx, by - ry];\n    var vEArm = [ex - rx, ey - ry];\n    var reverse = minus > PI;\n\n    if (reverse) {\n      var _deepClone3 = deepClone([vEArm, vBArm]);\n\n      var _deepClone4 = (0, _slicedToArray2[\"default\"])(_deepClone3, 2);\n\n      vBArm = _deepClone4[0];\n      vEArm = _deepClone4[1];\n    }\n\n    var inSector = isClockWise(vBArm, vPoint) && !isClockWise(vEArm, vPoint);\n    if (reverse) inSector = !inSector;\n    if (reverseBE) inSector = !inSector;\n    return inSector;\n  }\n  /**\r\n   * @description Determine if the point is in the clockwise direction of the vector\r\n   * @param {Array} vArm   Vector\r\n   * @param {Array} vPoint Point\r\n   * @return {Boolean} Result of check\r\n   */\n\n\n  function isClockWise(vArm, vPoint) {\n    var _vArm = (0, _slicedToArray2[\"default\"])(vArm, 2),\n        ax = _vArm[0],\n        ay = _vArm[1];\n\n    var _vPoint = (0, _slicedToArray2[\"default\"])(vPoint, 2),\n        px = _vPoint[0],\n        py = _vPoint[1];\n\n    return -ay * px + ax * py > 0;\n  }\n  /**\r\n   * @description Check if the point is inside the polyline\r\n   * @param {Array} point      Postion of point\r\n   * @param {Array} polyline   The points that makes up a polyline\r\n   * @param {Number} lineWidth Polyline linewidth\r\n   * @return {Boolean} Result of check\r\n   */\n\n\n  function checkPointIsNearPolyline(point, polyline, lineWidth) {\n    var halfLineWidth = lineWidth / 2;\n    var moveUpPolyline = polyline.map(function (_ref8) {\n      var _ref9 = (0, _slicedToArray2[\"default\"])(_ref8, 2),\n          x = _ref9[0],\n          y = _ref9[1];\n\n      return [x, y - halfLineWidth];\n    });\n    var moveDownPolyline = polyline.map(function (_ref10) {\n      var _ref11 = (0, _slicedToArray2[\"default\"])(_ref10, 2),\n          x = _ref11[0],\n          y = _ref11[1];\n\n      return [x, y + halfLineWidth];\n    });\n    var polygon = [].concat((0, _toConsumableArray2[\"default\"])(moveUpPolyline), (0, _toConsumableArray2[\"default\"])(moveDownPolyline.reverse()));\n    return checkPointIsInPolygon(point, polygon);\n  }\n  /**\r\n   * @description Check if the point is inside the rect\r\n   * @param {Array} point   Postion of point\r\n   * @param {Number} x      Rect start x coordinate\r\n   * @param {Number} y      Rect start y coordinate\r\n   * @param {Number} width  Rect width\r\n   * @param {Number} height Rect height\r\n   * @return {Boolean} Result of check\r\n   */\n\n\n  function checkPointIsInRect(_ref12, x, y, width, height) {\n    var _ref13 = (0, _slicedToArray2[\"default\"])(_ref12, 2),\n        px = _ref13[0],\n        py = _ref13[1];\n\n    if (px < x) return false;\n    if (py < y) return false;\n    if (px > x + width) return false;\n    if (py > y + height) return false;\n    return true;\n  }\n  /**\r\n   * @description Get the coordinates of the rotated point\r\n   * @param {Number} rotate Degree of rotation\r\n   * @param {Array} point   Postion of point\r\n   * @param {Array} origin  Rotation center\r\n   * @param {Array} origin  Rotation center\r\n   * @return {Number} Coordinates after rotation\r\n   */\n\n\n  function getRotatePointPos() {\n    var rotate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    var point = arguments.length > 1 ? arguments[1] : undefined;\n    var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n    if (!point) return false;\n    if (rotate % 360 === 0) return point;\n\n    var _point3 = (0, _slicedToArray2[\"default\"])(point, 2),\n        x = _point3[0],\n        y = _point3[1];\n\n    var _origin = (0, _slicedToArray2[\"default\"])(origin, 2),\n        ox = _origin[0],\n        oy = _origin[1];\n\n    rotate *= PI / 180;\n    return [(x - ox) * cos(rotate) - (y - oy) * sin(rotate) + ox, (x - ox) * sin(rotate) + (y - oy) * cos(rotate) + oy];\n  }\n  /**\r\n   * @description Get the coordinates of the scaled point\r\n   * @param {Array} scale  Scale factor\r\n   * @param {Array} point  Postion of point\r\n   * @param {Array} origin Scale center\r\n   * @return {Number} Coordinates after scale\r\n   */\n\n\n  function getScalePointPos() {\n    var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1, 1];\n    var point = arguments.length > 1 ? arguments[1] : undefined;\n    var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n    if (!point) return false;\n    if (scale === 1) return point;\n\n    var _point4 = (0, _slicedToArray2[\"default\"])(point, 2),\n        x = _point4[0],\n        y = _point4[1];\n\n    var _origin2 = (0, _slicedToArray2[\"default\"])(origin, 2),\n        ox = _origin2[0],\n        oy = _origin2[1];\n\n    var _scale = (0, _slicedToArray2[\"default\"])(scale, 2),\n        xs = _scale[0],\n        ys = _scale[1];\n\n    var relativePosX = x - ox;\n    var relativePosY = y - oy;\n    return [relativePosX * xs + ox, relativePosY * ys + oy];\n  }\n  /**\r\n   * @description Get the coordinates of the scaled point\r\n   * @param {Array} translate Translation distance\r\n   * @param {Array} point     Postion of point\r\n   * @return {Number} Coordinates after translation\r\n   */\n\n\n  function getTranslatePointPos(translate, point) {\n    if (!translate || !point) return false;\n\n    var _point5 = (0, _slicedToArray2[\"default\"])(point, 2),\n        x = _point5[0],\n        y = _point5[1];\n\n    var _translate = (0, _slicedToArray2[\"default\"])(translate, 2),\n        tx = _translate[0],\n        ty = _translate[1];\n\n    return [x + tx, y + ty];\n  }\n  /**\r\n   * @description Get the distance from the point to the line\r\n   * @param {Array} point     Postion of point\r\n   * @param {Array} lineBegin Line start position\r\n   * @param {Array} lineEnd   Line end position\r\n   * @return {Number} Distance between point and line\r\n   */\n\n\n  function getDistanceBetweenPointAndLine(point, lineBegin, lineEnd) {\n    if (!point || !lineBegin || !lineEnd) return false;\n\n    var _point6 = (0, _slicedToArray2[\"default\"])(point, 2),\n        x = _point6[0],\n        y = _point6[1];\n\n    var _lineBegin = (0, _slicedToArray2[\"default\"])(lineBegin, 2),\n        x1 = _lineBegin[0],\n        y1 = _lineBegin[1];\n\n    var _lineEnd = (0, _slicedToArray2[\"default\"])(lineEnd, 2),\n        x2 = _lineEnd[0],\n        y2 = _lineEnd[1];\n\n    var a = y2 - y1;\n    var b = x1 - x2;\n    var c = y1 * (x2 - x1) - x1 * (y2 - y1);\n    var molecule = abs(a * x + b * y + c);\n    var denominator = sqrt(a * a + b * b);\n    return molecule / denominator;\n  }\n  /**\r\n   * @description Get the coordinates of the specified radian on the circle\r\n   * @param {Number} x      Circle x coordinate\r\n   * @param {Number} y      Circle y coordinate\r\n   * @param {Number} radius Circle radius\r\n   * @param {Number} radian Specfied radian\r\n   * @return {Array} Postion of point\r\n   */\n\n\n  function getCircleRadianPoint(x, y, radius, radian) {\n    return [x + cos(radian) * radius, y + sin(radian) * radius];\n  }\n  /**\r\n   * @description Get the points that make up a regular polygon\r\n   * @param {Number} x     X coordinate of the polygon inscribed circle\r\n   * @param {Number} y     Y coordinate of the polygon inscribed circle\r\n   * @param {Number} r     Radius of the polygon inscribed circle\r\n   * @param {Number} side  Side number\r\n   * @param {Number} minus Radian offset\r\n   * @return {Array} Points that make up a regular polygon\r\n   */\n\n\n  function getRegularPolygonPoints(rx, ry, r, side) {\n    var minus = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : PI * -0.5;\n    var radianGap = PI * 2 / side;\n    var radians = new Array(side).fill('').map(function (t, i) {\n      return i * radianGap + minus;\n    });\n    return radians.map(function (radian) {\n      return getCircleRadianPoint(rx, ry, r, radian);\n    });\n  }\n\n  var _default = {\n    deepClone: deepClone,\n    eliminateBlur: eliminateBlur,\n    checkPointIsInCircle: checkPointIsInCircle,\n    checkPointIsInPolygon: checkPointIsInPolygon,\n    checkPointIsInSector: checkPointIsInSector,\n    checkPointIsNearPolyline: checkPointIsNearPolyline,\n    getTwoPointDistance: getTwoPointDistance,\n    getRotatePointPos: getRotatePointPos,\n    getScalePointPos: getScalePointPos,\n    getTranslatePointPos: getTranslatePointPos,\n    getCircleRadianPoint: getCircleRadianPoint,\n    getRegularPolygonPoints: getRegularPolygonPoints,\n    getDistanceBetweenPointAndLine: getDistanceBetweenPointAndLine\n  };\n  exports[\"default\"] = _default;\n});\nunwrapExports(util);\nvar util_1 = util.deepClone;\nvar util_2 = util.eliminateBlur;\nvar util_3 = util.checkPointIsInCircle;\nvar util_4 = util.getTwoPointDistance;\nvar util_5 = util.checkPointIsInPolygon;\nvar util_6 = util.checkPointIsInSector;\nvar util_7 = util.checkPointIsNearPolyline;\nvar util_8 = util.checkPointIsInRect;\nvar util_9 = util.getRotatePointPos;\nvar util_10 = util.getScalePointPos;\nvar util_11 = util.getTranslatePointPos;\nvar util_12 = util.getDistanceBetweenPointAndLine;\nvar util_13 = util.getCircleRadianPoint;\nvar util_14 = util.getRegularPolygonPoints;\nvar util$1 = createCommonjsModule(function (module, exports) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.filterNonNumber = filterNonNumber;\n  exports.deepMerge = deepMerge;\n  exports.mulAdd = mulAdd;\n  exports.mergeSameStackData = mergeSameStackData;\n  exports.getTwoPointDistance = getTwoPointDistance;\n  exports.getLinearGradientColor = getLinearGradientColor;\n  exports.getPolylineLength = getPolylineLength;\n  exports.getPointToLineDistance = getPointToLineDistance;\n  exports.initNeedSeries = initNeedSeries;\n  exports.radianToAngle = radianToAngle;\n\n  var _toConsumableArray2 = interopRequireDefault(toConsumableArray);\n\n  var _typeof2 = interopRequireDefault(_typeof_1);\n\n  function filterNonNumber(array) {\n    return array.filter(function (n) {\n      return typeof n === 'number';\n    });\n  }\n\n  function deepMerge(target, merged) {\n    for (var key in merged) {\n      if (target[key] && (0, _typeof2[\"default\"])(target[key]) === 'object') {\n        deepMerge(target[key], merged[key]);\n        continue;\n      }\n\n      if ((0, _typeof2[\"default\"])(merged[key]) === 'object') {\n        target[key] = (0, util.deepClone)(merged[key], true);\n        continue;\n      }\n\n      target[key] = merged[key];\n    }\n\n    return target;\n  }\n\n  function mulAdd(nums) {\n    nums = filterNonNumber(nums);\n    return nums.reduce(function (all, num) {\n      return all + num;\n    }, 0);\n  }\n\n  function mergeSameStackData(item, series) {\n    var stack = item.stack;\n    if (!stack) return (0, _toConsumableArray2[\"default\"])(item.data);\n    var stacks = series.filter(function (_ref) {\n      var s = _ref.stack;\n      return s === stack;\n    });\n    var index = stacks.findIndex(function (_ref2) {\n      var d = _ref2.data;\n      return d === item.data;\n    });\n    var datas = stacks.splice(0, index + 1).map(function (_ref3) {\n      var data = _ref3.data;\n      return data;\n    });\n    var dataLength = datas[0].length;\n    return new Array(dataLength).fill(0).map(function (foo, i) {\n      return mulAdd(datas.map(function (d) {\n        return d[i];\n      }));\n    });\n  }\n\n  function getTwoPointDistance(pointOne, pointTwo) {\n    var minusX = Math.abs(pointOne[0] - pointTwo[0]);\n    var minusY = Math.abs(pointOne[1] - pointTwo[1]);\n    return Math.sqrt(minusX * minusX + minusY * minusY);\n  }\n\n  function getLinearGradientColor(ctx, begin, end, color) {\n    if (!ctx || !begin || !end || !color.length) return;\n    var colors = color;\n    typeof colors === 'string' && (colors = [color, color]);\n    var linearGradientColor = ctx.createLinearGradient.apply(ctx, (0, _toConsumableArray2[\"default\"])(begin).concat((0, _toConsumableArray2[\"default\"])(end)));\n    var colorGap = 1 / (colors.length - 1);\n    colors.forEach(function (c, i) {\n      return linearGradientColor.addColorStop(colorGap * i, c);\n    });\n    return linearGradientColor;\n  }\n\n  function getPolylineLength(points) {\n    var lineSegments = new Array(points.length - 1).fill(0).map(function (foo, i) {\n      return [points[i], points[i + 1]];\n    });\n    var lengths = lineSegments.map(function (item) {\n      return getTwoPointDistance.apply(void 0, (0, _toConsumableArray2[\"default\"])(item));\n    });\n    return mulAdd(lengths);\n  }\n\n  function getPointToLineDistance(point, linePointOne, linePointTwo) {\n    var a = getTwoPointDistance(point, linePointOne);\n    var b = getTwoPointDistance(point, linePointTwo);\n    var c = getTwoPointDistance(linePointOne, linePointTwo);\n    return 0.5 * Math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / c;\n  }\n\n  function initNeedSeries(series, config, type) {\n    series = series.filter(function (_ref4) {\n      var st = _ref4.type;\n      return st === type;\n    });\n    series = series.map(function (item) {\n      return deepMerge((0, util.deepClone)(config, true), item);\n    });\n    return series.filter(function (_ref5) {\n      var show = _ref5.show;\n      return show;\n    });\n  }\n\n  function radianToAngle(radian) {\n    return radian / Math.PI * 180;\n  }\n});\nunwrapExports(util$1);\nvar util_1$1 = util$1.filterNonNumber;\nvar util_2$1 = util$1.deepMerge;\nvar util_3$1 = util$1.mulAdd;\nvar util_4$1 = util$1.mergeSameStackData;\nvar util_5$1 = util$1.getTwoPointDistance;\nvar util_6$1 = util$1.getLinearGradientColor;\nvar util_7$1 = util$1.getPolylineLength;\nvar util_8$1 = util$1.getPointToLineDistance;\nvar util_9$1 = util$1.initNeedSeries;\nvar util_10$1 = util$1.radianToAngle;\nexport { interopRequireDefault as _, util_1 as a, util_7$1 as b, util_13 as c, slicedToArray as d, util as e, _typeof_1 as f, util$1 as g, toConsumableArray as r, util_2$1 as u };","map":{"version":3,"sources":["../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","../node_modules/@jiaminghi/c-render/lib/plugin/util.js","../node_modules/@jiaminghi/charts/lib/util/index.js"],"names":["_interopRequireDefault","require$$0","require$$1","require$$2","_util"],"mappings":"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","sourcesContent":["function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepClone = deepClone;\nexports.eliminateBlur = eliminateBlur;\nexports.checkPointIsInCircle = checkPointIsInCircle;\nexports.getTwoPointDistance = getTwoPointDistance;\nexports.checkPointIsInPolygon = checkPointIsInPolygon;\nexports.checkPointIsInSector = checkPointIsInSector;\nexports.checkPointIsNearPolyline = checkPointIsNearPolyline;\nexports.checkPointIsInRect = checkPointIsInRect;\nexports.getRotatePointPos = getRotatePointPos;\nexports.getScalePointPos = getScalePointPos;\nexports.getTranslatePointPos = getTranslatePointPos;\nexports.getDistanceBetweenPointAndLine = getDistanceBetweenPointAndLine;\nexports.getCircleRadianPoint = getCircleRadianPoint;\nexports.getRegularPolygonPoints = getRegularPolygonPoints;\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar abs = Math.abs,\n    sqrt = Math.sqrt,\n    sin = Math.sin,\n    cos = Math.cos,\n    max = Math.max,\n    min = Math.min,\n    PI = Math.PI;\n/**\r\n * @description Clone an object or array\r\n * @param {Object|Array} object Cloned object\r\n * @param {Boolean} recursion   Whether to use recursive cloning\r\n * @return {Object|Array} Clone object\r\n */\n\nfunction deepClone(object) {\n  var recursion = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (!object) return object;\n  var parse = JSON.parse,\n      stringify = JSON.stringify;\n  if (!recursion) return parse(stringify(object));\n  var clonedObj = object instanceof Array ? [] : {};\n\n  if (object && (0, _typeof2[\"default\"])(object) === 'object') {\n    for (var key in object) {\n      if (object.hasOwnProperty(key)) {\n        if (object[key] && (0, _typeof2[\"default\"])(object[key]) === 'object') {\n          clonedObj[key] = deepClone(object[key], true);\n        } else {\n          clonedObj[key] = object[key];\n        }\n      }\n    }\n  }\n\n  return clonedObj;\n}\n/**\r\n * @description Eliminate line blur due to 1px line width\r\n * @param {Array} points Line points\r\n * @return {Array} Line points after processed\r\n */\n\n\nfunction eliminateBlur(points) {\n  return points.map(function (_ref) {\n    var _ref2 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n        x = _ref2[0],\n        y = _ref2[1];\n\n    return [parseInt(x) + 0.5, parseInt(y) + 0.5];\n  });\n}\n/**\r\n * @description Check if the point is inside the circle\r\n * @param {Array} point Postion of point\r\n * @param {Number} rx   Circle x coordinate\r\n * @param {Number} ry   Circle y coordinate\r\n * @param {Number} r    Circle radius\r\n * @return {Boolean} Result of check\r\n */\n\n\nfunction checkPointIsInCircle(point, rx, ry, r) {\n  return getTwoPointDistance(point, [rx, ry]) <= r;\n}\n/**\r\n * @description Get the distance between two points\r\n * @param {Array} point1 point1\r\n * @param {Array} point2 point2\r\n * @return {Number} Distance between two points\r\n */\n\n\nfunction getTwoPointDistance(_ref3, _ref4) {\n  var _ref5 = (0, _slicedToArray2[\"default\"])(_ref3, 2),\n      xa = _ref5[0],\n      ya = _ref5[1];\n\n  var _ref6 = (0, _slicedToArray2[\"default\"])(_ref4, 2),\n      xb = _ref6[0],\n      yb = _ref6[1];\n\n  var minusX = abs(xa - xb);\n  var minusY = abs(ya - yb);\n  return sqrt(minusX * minusX + minusY * minusY);\n}\n/**\r\n * @description Check if the point is inside the polygon\r\n * @param {Array} point  Postion of point\r\n * @param {Array} points The points that makes up a polyline\r\n * @return {Boolean} Result of check\r\n */\n\n\nfunction checkPointIsInPolygon(point, polygon) {\n  var counter = 0;\n\n  var _point = (0, _slicedToArray2[\"default\"])(point, 2),\n      x = _point[0],\n      y = _point[1];\n\n  var pointNum = polygon.length;\n\n  for (var i = 1, p1 = polygon[0]; i <= pointNum; i++) {\n    var p2 = polygon[i % pointNum];\n\n    if (x > min(p1[0], p2[0]) && x <= max(p1[0], p2[0])) {\n      if (y <= max(p1[1], p2[1])) {\n        if (p1[0] !== p2[0]) {\n          var xinters = (x - p1[0]) * (p2[1] - p1[1]) / (p2[0] - p1[0]) + p1[1];\n\n          if (p1[1] === p2[1] || y <= xinters) {\n            counter++;\n          }\n        }\n      }\n    }\n\n    p1 = p2;\n  }\n\n  return counter % 2 === 1;\n}\n/**\r\n * @description Check if the point is inside the sector\r\n * @param {Array} point       Postion of point\r\n * @param {Number} rx         Sector x coordinate\r\n * @param {Number} ry         Sector y coordinate\r\n * @param {Number} r          Sector radius\r\n * @param {Number} startAngle Sector start angle\r\n * @param {Number} endAngle   Sector end angle\r\n * @param {Boolean} clockWise Whether the sector angle is clockwise\r\n * @return {Boolean} Result of check\r\n */\n\n\nfunction checkPointIsInSector(point, rx, ry, r, startAngle, endAngle, clockWise) {\n  if (!point) return false;\n  if (getTwoPointDistance(point, [rx, ry]) > r) return false;\n\n  if (!clockWise) {\n    var _deepClone = deepClone([endAngle, startAngle]);\n\n    var _deepClone2 = (0, _slicedToArray2[\"default\"])(_deepClone, 2);\n\n    startAngle = _deepClone2[0];\n    endAngle = _deepClone2[1];\n  }\n\n  var reverseBE = startAngle > endAngle;\n\n  if (reverseBE) {\n    var _ref7 = [endAngle, startAngle];\n    startAngle = _ref7[0];\n    endAngle = _ref7[1];\n  }\n\n  var minus = endAngle - startAngle;\n  if (minus >= PI * 2) return true;\n\n  var _point2 = (0, _slicedToArray2[\"default\"])(point, 2),\n      x = _point2[0],\n      y = _point2[1];\n\n  var _getCircleRadianPoint = getCircleRadianPoint(rx, ry, r, startAngle),\n      _getCircleRadianPoint2 = (0, _slicedToArray2[\"default\"])(_getCircleRadianPoint, 2),\n      bx = _getCircleRadianPoint2[0],\n      by = _getCircleRadianPoint2[1];\n\n  var _getCircleRadianPoint3 = getCircleRadianPoint(rx, ry, r, endAngle),\n      _getCircleRadianPoint4 = (0, _slicedToArray2[\"default\"])(_getCircleRadianPoint3, 2),\n      ex = _getCircleRadianPoint4[0],\n      ey = _getCircleRadianPoint4[1];\n\n  var vPoint = [x - rx, y - ry];\n  var vBArm = [bx - rx, by - ry];\n  var vEArm = [ex - rx, ey - ry];\n  var reverse = minus > PI;\n\n  if (reverse) {\n    var _deepClone3 = deepClone([vEArm, vBArm]);\n\n    var _deepClone4 = (0, _slicedToArray2[\"default\"])(_deepClone3, 2);\n\n    vBArm = _deepClone4[0];\n    vEArm = _deepClone4[1];\n  }\n\n  var inSector = isClockWise(vBArm, vPoint) && !isClockWise(vEArm, vPoint);\n  if (reverse) inSector = !inSector;\n  if (reverseBE) inSector = !inSector;\n  return inSector;\n}\n/**\r\n * @description Determine if the point is in the clockwise direction of the vector\r\n * @param {Array} vArm   Vector\r\n * @param {Array} vPoint Point\r\n * @return {Boolean} Result of check\r\n */\n\n\nfunction isClockWise(vArm, vPoint) {\n  var _vArm = (0, _slicedToArray2[\"default\"])(vArm, 2),\n      ax = _vArm[0],\n      ay = _vArm[1];\n\n  var _vPoint = (0, _slicedToArray2[\"default\"])(vPoint, 2),\n      px = _vPoint[0],\n      py = _vPoint[1];\n\n  return -ay * px + ax * py > 0;\n}\n/**\r\n * @description Check if the point is inside the polyline\r\n * @param {Array} point      Postion of point\r\n * @param {Array} polyline   The points that makes up a polyline\r\n * @param {Number} lineWidth Polyline linewidth\r\n * @return {Boolean} Result of check\r\n */\n\n\nfunction checkPointIsNearPolyline(point, polyline, lineWidth) {\n  var halfLineWidth = lineWidth / 2;\n  var moveUpPolyline = polyline.map(function (_ref8) {\n    var _ref9 = (0, _slicedToArray2[\"default\"])(_ref8, 2),\n        x = _ref9[0],\n        y = _ref9[1];\n\n    return [x, y - halfLineWidth];\n  });\n  var moveDownPolyline = polyline.map(function (_ref10) {\n    var _ref11 = (0, _slicedToArray2[\"default\"])(_ref10, 2),\n        x = _ref11[0],\n        y = _ref11[1];\n\n    return [x, y + halfLineWidth];\n  });\n  var polygon = [].concat((0, _toConsumableArray2[\"default\"])(moveUpPolyline), (0, _toConsumableArray2[\"default\"])(moveDownPolyline.reverse()));\n  return checkPointIsInPolygon(point, polygon);\n}\n/**\r\n * @description Check if the point is inside the rect\r\n * @param {Array} point   Postion of point\r\n * @param {Number} x      Rect start x coordinate\r\n * @param {Number} y      Rect start y coordinate\r\n * @param {Number} width  Rect width\r\n * @param {Number} height Rect height\r\n * @return {Boolean} Result of check\r\n */\n\n\nfunction checkPointIsInRect(_ref12, x, y, width, height) {\n  var _ref13 = (0, _slicedToArray2[\"default\"])(_ref12, 2),\n      px = _ref13[0],\n      py = _ref13[1];\n\n  if (px < x) return false;\n  if (py < y) return false;\n  if (px > x + width) return false;\n  if (py > y + height) return false;\n  return true;\n}\n/**\r\n * @description Get the coordinates of the rotated point\r\n * @param {Number} rotate Degree of rotation\r\n * @param {Array} point   Postion of point\r\n * @param {Array} origin  Rotation center\r\n * @param {Array} origin  Rotation center\r\n * @return {Number} Coordinates after rotation\r\n */\n\n\nfunction getRotatePointPos() {\n  var rotate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var point = arguments.length > 1 ? arguments[1] : undefined;\n  var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n  if (!point) return false;\n  if (rotate % 360 === 0) return point;\n\n  var _point3 = (0, _slicedToArray2[\"default\"])(point, 2),\n      x = _point3[0],\n      y = _point3[1];\n\n  var _origin = (0, _slicedToArray2[\"default\"])(origin, 2),\n      ox = _origin[0],\n      oy = _origin[1];\n\n  rotate *= PI / 180;\n  return [(x - ox) * cos(rotate) - (y - oy) * sin(rotate) + ox, (x - ox) * sin(rotate) + (y - oy) * cos(rotate) + oy];\n}\n/**\r\n * @description Get the coordinates of the scaled point\r\n * @param {Array} scale  Scale factor\r\n * @param {Array} point  Postion of point\r\n * @param {Array} origin Scale center\r\n * @return {Number} Coordinates after scale\r\n */\n\n\nfunction getScalePointPos() {\n  var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [1, 1];\n  var point = arguments.length > 1 ? arguments[1] : undefined;\n  var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0, 0];\n  if (!point) return false;\n  if (scale === 1) return point;\n\n  var _point4 = (0, _slicedToArray2[\"default\"])(point, 2),\n      x = _point4[0],\n      y = _point4[1];\n\n  var _origin2 = (0, _slicedToArray2[\"default\"])(origin, 2),\n      ox = _origin2[0],\n      oy = _origin2[1];\n\n  var _scale = (0, _slicedToArray2[\"default\"])(scale, 2),\n      xs = _scale[0],\n      ys = _scale[1];\n\n  var relativePosX = x - ox;\n  var relativePosY = y - oy;\n  return [relativePosX * xs + ox, relativePosY * ys + oy];\n}\n/**\r\n * @description Get the coordinates of the scaled point\r\n * @param {Array} translate Translation distance\r\n * @param {Array} point     Postion of point\r\n * @return {Number} Coordinates after translation\r\n */\n\n\nfunction getTranslatePointPos(translate, point) {\n  if (!translate || !point) return false;\n\n  var _point5 = (0, _slicedToArray2[\"default\"])(point, 2),\n      x = _point5[0],\n      y = _point5[1];\n\n  var _translate = (0, _slicedToArray2[\"default\"])(translate, 2),\n      tx = _translate[0],\n      ty = _translate[1];\n\n  return [x + tx, y + ty];\n}\n/**\r\n * @description Get the distance from the point to the line\r\n * @param {Array} point     Postion of point\r\n * @param {Array} lineBegin Line start position\r\n * @param {Array} lineEnd   Line end position\r\n * @return {Number} Distance between point and line\r\n */\n\n\nfunction getDistanceBetweenPointAndLine(point, lineBegin, lineEnd) {\n  if (!point || !lineBegin || !lineEnd) return false;\n\n  var _point6 = (0, _slicedToArray2[\"default\"])(point, 2),\n      x = _point6[0],\n      y = _point6[1];\n\n  var _lineBegin = (0, _slicedToArray2[\"default\"])(lineBegin, 2),\n      x1 = _lineBegin[0],\n      y1 = _lineBegin[1];\n\n  var _lineEnd = (0, _slicedToArray2[\"default\"])(lineEnd, 2),\n      x2 = _lineEnd[0],\n      y2 = _lineEnd[1];\n\n  var a = y2 - y1;\n  var b = x1 - x2;\n  var c = y1 * (x2 - x1) - x1 * (y2 - y1);\n  var molecule = abs(a * x + b * y + c);\n  var denominator = sqrt(a * a + b * b);\n  return molecule / denominator;\n}\n/**\r\n * @description Get the coordinates of the specified radian on the circle\r\n * @param {Number} x      Circle x coordinate\r\n * @param {Number} y      Circle y coordinate\r\n * @param {Number} radius Circle radius\r\n * @param {Number} radian Specfied radian\r\n * @return {Array} Postion of point\r\n */\n\n\nfunction getCircleRadianPoint(x, y, radius, radian) {\n  return [x + cos(radian) * radius, y + sin(radian) * radius];\n}\n/**\r\n * @description Get the points that make up a regular polygon\r\n * @param {Number} x     X coordinate of the polygon inscribed circle\r\n * @param {Number} y     Y coordinate of the polygon inscribed circle\r\n * @param {Number} r     Radius of the polygon inscribed circle\r\n * @param {Number} side  Side number\r\n * @param {Number} minus Radian offset\r\n * @return {Array} Points that make up a regular polygon\r\n */\n\n\nfunction getRegularPolygonPoints(rx, ry, r, side) {\n  var minus = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : PI * -0.5;\n  var radianGap = PI * 2 / side;\n  var radians = new Array(side).fill('').map(function (t, i) {\n    return i * radianGap + minus;\n  });\n  return radians.map(function (radian) {\n    return getCircleRadianPoint(rx, ry, r, radian);\n  });\n}\n\nvar _default = {\n  deepClone: deepClone,\n  eliminateBlur: eliminateBlur,\n  checkPointIsInCircle: checkPointIsInCircle,\n  checkPointIsInPolygon: checkPointIsInPolygon,\n  checkPointIsInSector: checkPointIsInSector,\n  checkPointIsNearPolyline: checkPointIsNearPolyline,\n  getTwoPointDistance: getTwoPointDistance,\n  getRotatePointPos: getRotatePointPos,\n  getScalePointPos: getScalePointPos,\n  getTranslatePointPos: getTranslatePointPos,\n  getCircleRadianPoint: getCircleRadianPoint,\n  getRegularPolygonPoints: getRegularPolygonPoints,\n  getDistanceBetweenPointAndLine: getDistanceBetweenPointAndLine\n};\nexports[\"default\"] = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterNonNumber = filterNonNumber;\nexports.deepMerge = deepMerge;\nexports.mulAdd = mulAdd;\nexports.mergeSameStackData = mergeSameStackData;\nexports.getTwoPointDistance = getTwoPointDistance;\nexports.getLinearGradientColor = getLinearGradientColor;\nexports.getPolylineLength = getPolylineLength;\nexports.getPointToLineDistance = getPointToLineDistance;\nexports.initNeedSeries = initNeedSeries;\nexports.radianToAngle = radianToAngle;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _util = require(\"@jiaminghi/c-render/lib/plugin/util\");\n\nfunction filterNonNumber(array) {\n  return array.filter(function (n) {\n    return typeof n === 'number';\n  });\n}\n\nfunction deepMerge(target, merged) {\n  for (var key in merged) {\n    if (target[key] && (0, _typeof2[\"default\"])(target[key]) === 'object') {\n      deepMerge(target[key], merged[key]);\n      continue;\n    }\n\n    if ((0, _typeof2[\"default\"])(merged[key]) === 'object') {\n      target[key] = (0, _util.deepClone)(merged[key], true);\n      continue;\n    }\n\n    target[key] = merged[key];\n  }\n\n  return target;\n}\n\nfunction mulAdd(nums) {\n  nums = filterNonNumber(nums);\n  return nums.reduce(function (all, num) {\n    return all + num;\n  }, 0);\n}\n\nfunction mergeSameStackData(item, series) {\n  var stack = item.stack;\n  if (!stack) return (0, _toConsumableArray2[\"default\"])(item.data);\n  var stacks = series.filter(function (_ref) {\n    var s = _ref.stack;\n    return s === stack;\n  });\n  var index = stacks.findIndex(function (_ref2) {\n    var d = _ref2.data;\n    return d === item.data;\n  });\n  var datas = stacks.splice(0, index + 1).map(function (_ref3) {\n    var data = _ref3.data;\n    return data;\n  });\n  var dataLength = datas[0].length;\n  return new Array(dataLength).fill(0).map(function (foo, i) {\n    return mulAdd(datas.map(function (d) {\n      return d[i];\n    }));\n  });\n}\n\nfunction getTwoPointDistance(pointOne, pointTwo) {\n  var minusX = Math.abs(pointOne[0] - pointTwo[0]);\n  var minusY = Math.abs(pointOne[1] - pointTwo[1]);\n  return Math.sqrt(minusX * minusX + minusY * minusY);\n}\n\nfunction getLinearGradientColor(ctx, begin, end, color) {\n  if (!ctx || !begin || !end || !color.length) return;\n  var colors = color;\n  typeof colors === 'string' && (colors = [color, color]);\n  var linearGradientColor = ctx.createLinearGradient.apply(ctx, (0, _toConsumableArray2[\"default\"])(begin).concat((0, _toConsumableArray2[\"default\"])(end)));\n  var colorGap = 1 / (colors.length - 1);\n  colors.forEach(function (c, i) {\n    return linearGradientColor.addColorStop(colorGap * i, c);\n  });\n  return linearGradientColor;\n}\n\nfunction getPolylineLength(points) {\n  var lineSegments = new Array(points.length - 1).fill(0).map(function (foo, i) {\n    return [points[i], points[i + 1]];\n  });\n  var lengths = lineSegments.map(function (item) {\n    return getTwoPointDistance.apply(void 0, (0, _toConsumableArray2[\"default\"])(item));\n  });\n  return mulAdd(lengths);\n}\n\nfunction getPointToLineDistance(point, linePointOne, linePointTwo) {\n  var a = getTwoPointDistance(point, linePointOne);\n  var b = getTwoPointDistance(point, linePointTwo);\n  var c = getTwoPointDistance(linePointOne, linePointTwo);\n  return 0.5 * Math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b + c - a)) / c;\n}\n\nfunction initNeedSeries(series, config, type) {\n  series = series.filter(function (_ref4) {\n    var st = _ref4.type;\n    return st === type;\n  });\n  series = series.map(function (item) {\n    return deepMerge((0, _util.deepClone)(config, true), item);\n  });\n  return series.filter(function (_ref5) {\n    var show = _ref5.show;\n    return show;\n  });\n}\n\nfunction radianToAngle(radian) {\n  return radian / Math.PI * 180;\n}"]},"metadata":{},"sourceType":"module"}