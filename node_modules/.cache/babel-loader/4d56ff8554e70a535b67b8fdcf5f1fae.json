{"ast":null,"code":"var _jsxFileName = \"/Users/kscissorfootdoctor/Desktop/ykd.tv/src/pages/compontents/hcharts/H_ProcessWork.tsx\";\nimport React from 'react';\nimport { GetProcessWork } from '../../../utils/RequestService';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport highcharts3d from 'highcharts/highcharts-3d';\nimport cylinder from \"highcharts/modules/cylinder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nhighcharts3d(Highcharts);\ncylinder(Highcharts);\nexport default class H_ProcessWork extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAPIData = async () => {\n      const res = await GetProcessWork();\n      if (res.Table == null) return;\n      if (res.Table.length == 0) return;\n      var _data_Description = [];\n      var _data_ac = [];\n      var _data_pc = [];\n\n      for (var i = 0; i < res.Table.length; i++) {\n        if (res.Table[i].ac != 0 && res.Table[i].ac != null) {\n          var item = res.Table[i];\n          var ac = item.ac == null ? '' : item.ac;\n          var pc = item.pc == null ? '' : item.pc;\n          var Description = item.Description == null ? 0 : item.Description;\n\n          _data_Description.push(Description);\n\n          _data_ac.push(ac);\n\n          _data_pc.push(pc);\n        }\n      }\n\n      this.setState({\n        data_Description: _data_Description,\n        data_ac: _data_ac,\n        data_pc: _data_pc\n      });\n    };\n\n    this.componentDidMount = async () => {\n      await this.getAPIData();\n      setInterval(async () => {\n        await this.getAPIData();\n      }, 6000);\n    };\n\n    this.componentWillMount = async () => {\n      var _full = this.props.full == null ? true : this.props.full;\n\n      if (_full) {\n        this.setState({\n          _height: document.body.scrollHeight * 0.7,\n          _fontSize: 30\n        });\n      } else {\n        this.setState({\n          _fontSize: 20,\n          _height: this.props.hh\n        });\n      }\n    };\n\n    this.state = {\n      data_Description: [],\n      data_ac: [],\n      data_pc: [],\n      _height: 0,\n      _fontSize: 16\n    };\n  }\n\n  render() {\n    const that = this;\n\n    document.onkeydown = function (e) {\n      var ev = document.all ? window.event : e;\n\n      if (ev.keyCode == 27) {\n        that.props.history.push('/');\n      }\n    };\n\n    const options = {\n      credits: {\n        enabled: false\n      },\n      chart: {\n        height: this.state._height,\n        type: 'cylinder',\n        options3d: {\n          enabled: false,\n          alpha: 20,\n          beta: 0,\n          depth: 0,\n          viewDistance: 25\n        }\n      },\n      tooltip: {\n        shared: false\n      },\n      title: {\n        text: null\n      },\n      plotOptions: {\n        cylinder: {\n          colorByPoint: true,\n          depth: 40,\n          //pointWidth: 40,\n          dataLabels: {\n            enabled: true,\n            y: -10,\n            formatter: function () {\n              return this.y.toFixed(2) + \"%\";\n            }\n          }\n        } // line: {\n        //   dataLabels: {\n        //     enabled: true,\n        //     y: -5,\n        //     formatter: function() {\n        //       return this.y.toFixed(2) + \"%\";\n        //     }\n        //   }\n        // }\n\n      },\n      xAxis: {\n        categories: this.state.data_Description,\n        //type: 'category',\n        labels: {\n          rotation: this.state.data_Description.length > 10 ? -35 : 0,\n          style: {\n            fontSize: this.state._fontSize,\n            color: \"#000\",\n            autoRotation: true,\n            autoRotationLimit: 10\n          }\n        }\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: ''\n        },\n        gridLineColor: \"#999\",\n        //横向网格线颜色,\n        labels: {\n          rotation: 0,\n          style: {\n            fontSize: this.state._fontSize,\n            color: \"#000\"\n          }\n        }\n      },\n      series: [{\n        name: \"返工\",\n        data: this.state.data_ac,\n        color: \"#191970\",\n        dataLabels: {\n          enabled: true,\n          //fontSize:30,\n          color: '#000',\n          style: {\n            fontSize: this.state._fontSize\n          } // y: 10\n\n        }\n      } // {\n      //   name: \"合格\",\n      //   data: [100,100,100],\n      //   type: \"line\",\n      //   color: \"#191970\",\n      //   dataLabels: {\n      //     enabled: true,\n      //     color: '#000',\n      //     style:{ fontSize:this.state._fontSize}\n      //   }\n      // }\n      ],\n      legend: false\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.props.hh == null && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          textAlign: 'center',\n          paddingTop: 60,\n          paddingBottom: 20,\n          fontSize: '30px',\n          fontWeight: 600\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u751F\\u4EA7\\u5E73\\u8861\\u72B6\\u51B5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 134\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }, this), this.state._height > 0 && /*#__PURE__*/_jsxDEV(HighchartsReact, {\n        highcharts: Highcharts,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/kscissorfootdoctor/Desktop/ykd.tv/src/pages/compontents/hcharts/H_ProcessWork.tsx"],"names":["React","GetProcessWork","Highcharts","HighchartsReact","highcharts3d","cylinder","H_ProcessWork","Component","constructor","props","getAPIData","res","Table","length","_data_Description","_data_ac","_data_pc","i","ac","item","pc","Description","push","setState","data_Description","data_ac","data_pc","componentDidMount","setInterval","componentWillMount","_full","full","_height","document","body","scrollHeight","_fontSize","hh","state","render","that","onkeydown","e","ev","all","window","event","keyCode","history","options","credits","enabled","chart","height","type","options3d","alpha","beta","depth","viewDistance","tooltip","shared","title","text","plotOptions","colorByPoint","dataLabels","y","formatter","toFixed","xAxis","categories","labels","rotation","style","fontSize","color","autoRotation","autoRotationLimit","yAxis","min","gridLineColor","series","name","data","legend","width","textAlign","paddingTop","paddingBottom","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport {GetProcessWork} from '../../../utils/RequestService'\r\nimport Highcharts from 'highcharts'\r\nimport HighchartsReact from 'highcharts-react-official'\r\nimport highcharts3d from 'highcharts/highcharts-3d';\r\nimport cylinder from \"highcharts/modules/cylinder\";\r\nhighcharts3d(Highcharts);\r\ncylinder(Highcharts);\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class H_ProcessWork extends React.Component<any,any>{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n   \r\n    this.state = { data_Description:[],data_ac:[],data_pc:[], _height:0,\r\n    _fontSize:16};\r\n    }\r\n\r\n   \r\n    getAPIData=async()=>{\r\n\r\n      const res=await GetProcessWork()\r\n      if(res.Table==null)return;\r\n      if(res.Table.length==0)return;\r\n      var _data_Description=[];\r\n      var _data_ac=[];\r\n      var _data_pc=[];\r\n      \r\n      for(var i=0;i<res.Table.length;i++)\r\n      {\r\n       \r\n        if(res.Table[i].ac!=0&&res.Table[i].ac!=null)\r\n        {\r\n        var item=res.Table[i];\r\n        var ac=item.ac==null?'':item.ac;\r\n        var pc=item.pc==null?'':item.pc;\r\n        var Description=item.Description==null?0:item.Description;\r\n        _data_Description.push(Description)\r\n        _data_ac.push(ac)\r\n        _data_pc.push(pc)\r\n        }\r\n      }  \r\n      this.setState(\r\n        {\r\n          data_Description:_data_Description,\r\n          data_ac:_data_ac,\r\n          data_pc:_data_pc\r\n        }\r\n        )\r\n    }\r\n  \r\n  componentDidMount=async()=> {\r\n    await this.getAPIData()\r\n  \r\n     setInterval(\r\n      async() => {\r\n        await this.getAPIData()\r\n      },\r\n      6000);\r\n  }\r\n\r\n  componentWillMount=async()=>{\r\n    var _full=this.props.full==null?true:this.props.full;\r\n    if(_full)\r\n    {\r\n       this.setState({_height:document.body.scrollHeight*0.7,_fontSize:30})\r\n    }\r\n    else\r\n    {\r\n     this.setState({_fontSize:20,_height:this.props.hh})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const that = this;\r\n    document.onkeydown = function (e: any) {\r\n      var ev = document.all ? window.event : e;\r\n      if (ev.keyCode == 27) {\r\n        that.props.history.push('/')\r\n      }\r\n    }\r\n\r\n    const options:any = {\r\n      credits: {\r\n        enabled: false\r\n      },\r\n      chart: {\r\n        height:this.state._height,\r\n        type: 'cylinder',\r\n        options3d: {\r\n          enabled: false,\r\n          alpha: 20,\r\n          beta: 0,\r\n          depth: 0,\r\n          viewDistance: 25\r\n        }\r\n      },\r\n      tooltip: {\r\n        shared: false\r\n      },\r\n       title: {\r\n         \r\n         text: null\r\n       },\r\n      plotOptions: {\r\n        cylinder: {\r\n          colorByPoint: true,\r\n          depth: 40,\r\n          //pointWidth: 40,\r\n          dataLabels: {\r\n            enabled: true,\r\n            y: -10,\r\n            formatter: function() {\r\n              return this.y.toFixed(2) + \"%\";\r\n            }\r\n          }\r\n        },\r\n        // line: {\r\n        //   dataLabels: {\r\n        //     enabled: true,\r\n        //     y: -5,\r\n        //     formatter: function() {\r\n        //       return this.y.toFixed(2) + \"%\";\r\n        //     }\r\n        //   }\r\n        // }\r\n      },\r\n      xAxis: {\r\n        categories: this.state.data_Description,\r\n        //type: 'category',\r\n        labels: {\r\n          rotation:this.state.data_Description.length>10? -35:0, \r\n          style:{\r\n            fontSize: this.state._fontSize,\r\n            color: \"#000\",\r\n            autoRotation:true,\r\n            autoRotationLimit:10\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: ''\r\n        },\r\n        gridLineColor: \"#999\", //横向网格线颜色,\r\n          labels: {\r\n            rotation: 0,\r\n            style: {\r\n              fontSize: this.state._fontSize,\r\n              color: \"#000\"\r\n            }\r\n          }\r\n      },\r\n      series: [\r\n        {\r\n          name: \"返工\",\r\n          data: this.state.data_ac,\r\n          color: \"#191970\",\r\n          dataLabels: {\r\n            enabled: true,\r\n            //fontSize:30,\r\n            color: '#000',\r\n            style:{ fontSize:this.state._fontSize}\r\n          \r\n           // y: 10\r\n          }\r\n        }\r\n        ,\r\n        // {\r\n        //   name: \"合格\",\r\n        //   data: [100,100,100],\r\n        //   type: \"line\",\r\n        //   color: \"#191970\",\r\n        //   dataLabels: {\r\n        //     enabled: true,\r\n        //     color: '#000',\r\n        //     style:{ fontSize:this.state._fontSize}\r\n        //   }\r\n        // }\r\n      ],\r\n      legend: false\r\n    }\r\n    \r\n  \r\n  return <div>\r\n   \r\n  {this.props.hh==null&&<div style={{width:'100%',textAlign:'center',paddingTop:60,paddingBottom:20,fontSize:'30px',fontWeight:600}}><h1>生产平衡状况</h1></div>}\r\n  {this.state._height>0&&<HighchartsReact \r\n      highcharts={Highcharts}\r\n      options={options}\r\n  />}\r\n</div>;\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}